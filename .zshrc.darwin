#### env
export PATH=~/bin:/usr/local/bin:$PATH
export SHELL=`which zsh`
export LANGUAGE=ja_JP:ja:en_GB:en
export LANG=ja_JP.UTF-8
export PAGER=less
export FTP_PASSIVE=1
export LESS='-R'
export LESSOPEN='| /usr/local/bin/src-hilite-lesspipe.sh %s'
export HOMEBREW_GITHUB_API_TOKEN=48990aa78f0f7aec0730dd7966537b410dd630b5

#### alias
alias ls="ls -F"
alias l="ls -l"
alias ll="ls -Al"
alias la="ls -al"
alias sc="screen"
alias emacs="TERM=xterm-256color /usr/local/bin/emacs"
alias e="emacsclient -t"
alias kill-emacs="emacsclient -e '(kill-emacs)'"
alias perlsrc="perldoc -MPod::Strip"

#### bindkey
bindkey -e
#bindkey '^R' history-incremental-pattern-search-backward
bindkey '^S' history-incremental-pattern-search-forward

#### completion
autoload -U compinit
compinit
setopt auto_cd
setopt auto_name_dirs
setopt auto_pushd
setopt auto_remove_slash
setopt extended_glob
setopt no_flow_control

#### completion
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn
zstyle ':vcs_info:*' formats $'%{\e[35m%} [%s %r %b]%{\e[m%}'

#### history
HISTFILE=$HOME/.zsh-history
HISTSIZE=10000
SAVEHIST=10000
setopt extended_history
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt share_history
setopt hist_no_store
function history-all { history -E 1 }

#### prompt
function precmd_vcs() {
    vcs_info
    RPROMPT='%{[33m%}%(5~,%-2~/.../%2~,%~)'${vcs_info_msg_0_}$'%{[m%}'
}
setopt prompt_subst
PROMPT='%{[36m%}%n@%m%{[m%}%# '
#RPROMPT='%{[33m%}[%(5~,%-2~/.../%2~,%~)]%{[m%}'
precmd_functions+=(precmd_vcs)

#### option
setopt auto_menu correct
setopt pushd_ignore_dups rm_star_silent sun_keyboard_hack
setopt list_types no_beep always_last_prompt
setopt cdable_vars sh_word_split auto_param_keys

#### limit
limit coredumpsize 0

#### brew install zsh-syntax-highlighting
[[ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

#### nvm
### % git clone git://github.com/creationix/nvm.git .nvm
### % . nvm/nvm.sh
[[ -s ${HOME}/.nvm/nvm.sh ]] && . ${HOME}/.nvm/nvm.sh
nvm alias default 0.8
nvm use default
npm_dir=${NVM_PATH}_modules
export NODE_PATH=$npm_dir

umask 022

#### create emacs env file
perl -wle 'do { print qq/(setenv "$_" "$ENV{$_}")/ if exists $ENV{$_} } for @ARGV' PATH > ~/.emacs.d/shellenv.el

#### plenv
if [ -d ${HOME}/.plenv  ] ; then
   export PATH=${HOME}/.plenv/bin/:${HOME}/.plenv/shims:${PATH}
   eval "$(plenv init -)"
fi

#### pyenv
if [ -d ${HOME}/.pyenv ] ; then
   export PATH=${HOME}/.pyenv/bin/:${HOME}/.pyenv/shims:${PATH}
   eval "$(pyenv init -)"
fi

#### rbenv
if [ -d ${HOME}/.rbenv  ] ; then
   export PATH="${HOME}/.rbenv/bin:${HOME}/.rbenv/shims:${PATH}"
   eval "$(rbenv init -)"
fi

#### phpenv
if [ -d ${HOME}/.phpenv  ] ; then
   export PATH=${HOME}/.phpenv/bin:${HOME}/.phpenv/shims:${PATH}
   eval "$(phpenv init -)"
fi

#### mysql-build
export PATH=$HOME/mysql-build/bin:$PATH
export PATH=$HOME/opt/mysql/5.5.34/bin:$PATH

#### percol
## pip install percol
function percol-select-history() {
    local tac
    if which gtac > /dev/null; then
        tac="gtac"
    elif which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(history -n 1 | \
        eval $tac | \
        percol --match-method regex --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen
}
zle -N percol-select-history
bindkey '^r' percol-select-history

function percol-select-directory() {
    local tac
    if which gtac > /dev/null; then
        tac="gtac"
    elif which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    local dest=$(_z -r 2>&1 | eval $tac | percol --query "$LBUFFER" | awk '{ print $2 }')
    if [ -n "${dest}" ]; then
        cd ${dest}
        zle accept-line
    else
        zle reset-prompt
    fi
}
zle -N percol-select-directory
bindkey '^x^j' percol-select-directory

#### z.sh
## brew install z
if which brew > /dev/null; then
    _Z_CMD=j
    source $(brew --prefix)/etc/profile.d/z.sh
fi
